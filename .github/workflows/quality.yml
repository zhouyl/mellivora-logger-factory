name: Code Quality

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  code-style:
    runs-on: ubuntu-latest

    name: Code Style Check

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl
        coverage: none
        tools: composer:v2

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer packages
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-php-8.3-quality-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-8.3-quality-
          ${{ runner.os }}-php-8.3-
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-interaction

    - name: Run PHP CS Fixer
      run: composer cs-check

    - name: Check for PHP CS Fixer issues
      if: failure()
      run: |
        echo "## Code Style Issues Found" >> $GITHUB_STEP_SUMMARY
        echo "Please run \`composer cs-fix\` to fix the issues." >> $GITHUB_STEP_SUMMARY

  static-analysis:
    runs-on: ubuntu-latest

    name: Static Analysis

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, json
        coverage: none
        tools: composer:v2

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer packages
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-php-8.3-static-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-8.3-static-
          ${{ runner.os }}-php-8.3-
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-interaction

    - name: Check PHP syntax
      run: find . -name "*.php" ! -path "./vendor/*" -exec php -l {} \; | grep -v "No syntax errors detected" && exit 1 || exit 0

    - name: Validate composer.json
      run: composer validate --strict

    - name: Check for security vulnerabilities
      run: composer audit

  documentation:
    runs-on: ubuntu-latest

    name: Documentation Check

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check README
      run: |
        if [ ! -f README.md ]; then
          echo "README.md is missing"
          exit 1
        fi

        # Check for required sections
        if ! grep -q "## Installation" README.md; then
          echo "README.md is missing Installation section"
          exit 1
        fi

        if ! grep -q "## Usage" README.md || ! grep -q "## 使用方法" README.md; then
          echo "README.md is missing Usage section"
          exit 1
        fi

    - name: Check Laravel documentation
      run: |
        if [ ! -f docs/LARAVEL.md ]; then
          echo "Laravel documentation is missing"
          exit 1
        fi

    - name: Check Testing documentation
      run: |
        if [ ! -f docs/TESTING.md ]; then
          echo "Testing documentation is missing"
          exit 1
        fi

    - name: Check LICENSE
      run: |
        if [ ! -f LICENSE ]; then
          echo "LICENSE file is missing"
          exit 1
        fi

    - name: Documentation Summary
      run: |
        echo "## Documentation Check Results" >> $GITHUB_STEP_SUMMARY
        echo "✅ README.md exists and has required sections" >> $GITHUB_STEP_SUMMARY
        echo "✅ Laravel documentation exists" >> $GITHUB_STEP_SUMMARY
        echo "✅ Testing documentation exists" >> $GITHUB_STEP_SUMMARY
        echo "✅ LICENSE file exists" >> $GITHUB_STEP_SUMMARY
